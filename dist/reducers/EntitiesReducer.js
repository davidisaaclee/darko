// Generated by CoffeeScript 1.9.2
(function() {
  var Entity, Immutable, _, addChildReducers, k, mapAssign, reducer, updeep;

  _ = require('lodash');

  updeep = require('updeep');

  Immutable = require('immutable');

  k = require('../ActionTypes');

  mapAssign = require('../util/mapAssign');

  addChildReducers = require('../util/addChildReducers');

  Entity = require('../model/Entity');

  reducer = function(state, action) {
    var entity, id, initialData, localData, name, ref, ref1;
    if (state == null) {
      state = Immutable.Map();
    }
    switch (action.type) {
      case k.AddEntity:
        ref = _.defaults({}, action.data, {
          id: "entity-" + state._spawnedCount,
          name: null,
          initialData: {}
        }), id = ref.id, name = ref.name, initialData = ref.initialData;
        entity = new Entity(id, name, initialData);
        return state.set(id, entity);
      case k.RemoveEntity:
        id = action.data.id;
        return state["delete"](id);
      case k.SetEntityLocalData:
        ref1 = action.data, entity = ref1.entity, localData = ref1.localData;
        return state.update(entity, function(e) {
          return _.assign({}, e, {
            localData: localData
          });
        });
      default:
        return state;
    }
  };

  module.exports = reducer;

}).call(this);

//# sourceMappingURL=EntitiesReducer.js.map
